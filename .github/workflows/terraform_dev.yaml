# This workflow will run Terraform init, validate, and plan on Pull Request=
name: Terraform apply in Dev
on:
  push:
    branches:
      - main
    paths:
      - 'terraform/environments/dev/**'
      - 'terraform/modules/**'
env:
  TF_ACTION_WORKING_DIR: terraform/environments/dev
  TF_BUCKET: solutions-template-sandbox-tfstate
  PROJECT_ID: solutions-template-sandbox

# cookiecutter:raw {% raw %}
jobs:
  tf_plan_validate:
    runs-on: ubuntu-latest
    name: 'TF Init - Validate - Plan - Apply (on merge)'
    defaults:
      run:
        working-directory: ${{ env.TF_ACTION_WORKING_DIR }}
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.5
    - name: Install gcloud
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.TF_DEV_SA_KEY }}
        export_default_credentials: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color

    - name: Terraform Apply
      id: aply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: find_comment
      if: always() && github.event_name == 'pull_request'
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Latest Terraform Output

    - name: Create comment
      uses: peter-evans/create-or-update-comment@v1
      id: create_comment
      if: always() && github.event_name == 'pull_request'
      with:
        comment-id: ${{ steps.find_comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ## Latest Terraform Output:
          #### Terraform Init: `${{ steps.init.outcome }}`
          #### Terraform Validate: `${{ steps.validate.outcome }}`
          #### Terraform Plan: `${{ steps.plan.outcome }}`


          <details><summary>Show Plan</summary>

          ```${{ steps.plan.outputs.stdout }}
          ${{ steps.plan.outputs.stderr }}
          ${{ steps.plan.outputs.exitcode }}
          ```

          </details>
        edit-mode: replace

# cookiecutter:endraw {% endraw %}
