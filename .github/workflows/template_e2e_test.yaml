# This workflow will run Terraform init, validate, and plan on Pull Request=
name: Template E2E test
on:
  issue_comment:
    types: [created]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.E2E_TEST_PROJECT_ID }}
  ORGANIZATION_ID: ${{ secrets.ORGANIZATION_ID }}
  REGION: us-central1
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.E2E_TEST_SA_KEY }}
  KUSTOMIZE_VERSION: 5.0.1
  SKAFFOLD_VERSION: 2.4.1
  TERRAFORM_VERSION: 1.4.6
  JOB_ID: ${{ fromJSON(toJSON(github.run_id)) }}
  E2E_RUNNER_SA: ${{ vars.E2E_RUNNER_SA }}

jobs:
  run_template_e2e_test:
    if: |
      ${{
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '/run-e2e-test' ))
        || github.event_name == 'workflow_dispatch'
        }}
    runs-on: ubuntu-latest
    environment: e2e-v2
    name: Template E2E tests
    steps:
      - name: Check out repository with main branch
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'workflow_dispatch' }}

      - name: Check out repository with Pull Request HEAD
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'issue_comment' && contains(github.event.comment.body, '/run-e2e-test') }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Comment on pull request for run start.
        uses: actions/github-script@v3
        if: ${{ github.event.issue.pull_request }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "[E2E Test Start] Github Action run started at https://github.com/${{ github.repository }}/actions/runs/${{ env.JOB_ID }}"
            })

      - name: Install gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{env.PROJECT_ID}}
          credentials_json: ${{ secrets.E2E_TEST_SA_KEY }}
          export_default_credentials: true

      - name: Install Kustomize
        run: |
          wget -O kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v$KUSTOMIZE_VERSION/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz

      - name: Install Skaffold release binary
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/v$SKAFFOLD_VERSION/skaffold-linux-amd64
          sudo install skaffold /usr/local/bin/skaffold

      - name: Set default repo for Skaffold
        run: |
          skaffold config set default-repo "$SKAFFOLD_DEFAULT_REPO"

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{env.TERRAFORM_VERSION}}

      # https://github.com/google-github-actions/auth
      - name: Auth with Service Account
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.E2E_TEST_SA_KEY }}"

      - name: Check current path
        run: |
          echo "Current path: $(pwd)"
          ls -l
          echo

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: false
          virtualenvs-path: ~/.venv
          installer-parallel: true

      - name: Install dependencies
        run: |
          pip install pytest

      - name: Run e2e test script
        run: |
          bash e2e/template_e2e_tests/run_template_e2e.sh

      - name: Comment on pull request for run complete.
        uses: actions/github-script@v3
        if: ${{ github.event.issue.pull_request }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "[E2E Test Complete] Github Action run completed at https://github.com/${{ github.repository }}/actions/runs/${{ env.JOB_ID }}"
            })
